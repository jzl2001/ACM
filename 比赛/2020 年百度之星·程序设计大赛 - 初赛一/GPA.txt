 Time Limit: 2000/1000 MS (Java/Others)  Memory Limit: 32768/32768 K (Java/Others)
Problem Description
小沃沃一共参加了 4 门考试，每门考试满分 100 分，最低 0 分，分数是整数。

给定四门考试的总分，请问在最优情况下，四门课绩点的和最高是多少？

分数与绩点之间的对应关系如下：

95~100 4.3

90~94 4.0

85~89 3.7

80~84 3.3

75~79 3.0

70~74 2.7

67~69 2.3

65~66 2.0

62~64 1.7

60~61 1.0

0~59 0

Input
第一行一个正整数 test(1 \le test \le 401)test(1≤test≤401) 表示数据组数。 接下来 testtest 行，每行一个正整数 xx 表示四门考试的总分 (0 \le x \le 400)(0≤x≤400)。

Output
对于每组数据，一行一个数表示答案。答案保留一位小数。

Sample Input
2
0
400
Sample Output
0.0
17.2
Statistic | Submit | Clarifications | Back
#include <iostream>
#include <stdio.h>
#include <string.h>
#include <time.h>
#include <string>
#include <bits/stdc++.h>
using namespace std;
#ifdef LOCAL
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
const int N = 1e5 + 10;
double calc(int num)
{
    if (num >= 95)
        return 4.3;
    if (num >= 90)
        return 4.0;
    if (num >= 85)
        return 3.7;
    if (num >= 80)
        return 3.3;
    if (num >= 75)
        return 3.0;
    if (num >= 70)
        return 2.7;
    if (num >= 67)
        return 2.3;
    if (num >= 65)
        return 2.0;
    if (num >= 62)
        return 1.7;
    if (num >= 60)
        return 1.0;
    return 0;
}
//double ans[410] = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.7, 1.7, 1.7, 2.0, 2.0, 2.3, 2.3, 2.3, 2.7, 2.7, 2.7, 2.7, 2.7, 3.0, 3.0, 3.0, 3.0, 3.0, 3.3, 3.3, 3.3, 3.3, 3.3, 3.7, 3.7, 3.7, 3.7, 3.7, 4.0, 4.0, 4.0, 4.0, 4.0, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.4, 4.4, 4.6, 4.7, 4.7, 5.0, 5.0, 5.0, 5.4, 5.4, 5.4, 5.4, 5.4, 5.7, 5.7, 5.7, 5.7, 5.7, 6.0, 6.0, 6.0, 6.0, 6.0, 6.4, 6.4, 6.4, 6.4, 6.4, 6.7, 6.7, 6.7, 6.7, 6.7, 7.0, 7.0, 7.0, 7.0, 7.0, 7.4, 7.4, 7.4, 7.4, 7.4, 7.7, 7.7, 7.7, 7.7, 7.7, 8.0, 8.0, 8.0, 8.0, 8.0, 8.3, 8.3, 8.3, 8.3, 8.3, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.7, 8.7, 8.7, 8.7, 8.7, 9.1, 9.1, 9.1, 9.1, 9.1, 9.4, 9.4, 9.4, 9.4, 9.4, 9.7, 9.7, 9.7, 9.7, 9.7, 10.1, 10.1, 10.1, 10.1, 10.1, 10.4, 10.4, 10.4, 10.4, 10.4, 10.7, 10.7, 10.7, 10.7, 10.7, 11.1, 11.1, 11.1, 11.1, 11.1, 11.4, 11.4, 11.4, 11.4, 11.4, 11.7, 11.7, 11.7, 11.7, 11.7, 12.0, 12.0, 12.0, 12.0, 12.0, 12.3, 12.3, 12.3, 12.3, 12.3, 12.6, 12.6, 12.6, 12.6, 12.6, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 13.1, 13.1, 13.1, 13.1, 13.1, 13.4, 13.4, 13.4, 13.4, 13.4, 13.8, 13.8, 13.8, 13.8, 13.8, 14.1, 14.1, 14.1, 14.1, 14.1, 14.4, 14.4, 14.4, 14.4, 14.4, 14.8, 14.8, 14.8, 14.8, 14.8, 15.1, 15.1, 15.1, 15.1, 15.1, 15.4, 15.4, 15.4, 15.4, 15.4, 15.7, 15.7, 15.7, 15.7, 15.7, 16.0, 16.0, 16.0, 16.0, 16.0, 16.3, 16.3, 16.3, 16.3, 16.3, 16.6, 16.6, 16.6, 16.6, 16.6, 16.9, 16.9, 16.9, 16.9, 16.9, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2 };
double ans[410] = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.7, 1.7, 1.7, 2.0, 2.0, 2.3, 2.3, 2.3, 2.7, 2.7, 2.7, 2.7, 2.7, 3.0, 3.0, 3.0, 3.0, 3.0, 3.3, 3.3, 3.3, 3.3, 3.3, 3.7, 3.7, 3.7, 3.7, 3.7, 4.0, 4.0, 4.0, 4.0, 4.0, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.4, 4.4, 4.6, 4.7, 4.7, 5.0, 5.0, 5.0, 5.4, 5.4, 5.4, 5.4, 5.4, 5.7, 5.7, 5.7, 5.7, 5.7, 6.0, 6.0, 6.0, 6.0, 6.0, 6.4, 6.4, 6.4, 6.4, 6.4, 6.7, 6.7, 6.7, 6.7, 6.7, 7.0, 7.0, 7.0, 7.0, 7.0, 7.4, 7.4, 7.4, 7.4, 7.4, 7.7, 7.7, 7.7, 7.7, 7.7, 8.0, 8.0, 8.0, 8.0, 8.0, 8.3, 8.3, 8.3, 8.3, 8.3, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.7, 8.7, 8.7, 8.7, 8.7, 9.1, 9.1, 9.1, 9.1, 9.1, 9.4, 9.4, 9.4, 9.4, 9.4, 9.7, 9.7, 9.7, 9.7, 9.7, 10.1, 10.1, 10.1, 10.1, 10.1, 10.4, 10.4, 10.4, 10.4, 10.4, 10.7, 10.7, 10.7, 10.7, 10.7, 11.1, 11.1, 11.1, 11.1, 11.1, 11.4, 11.4, 11.4, 11.4, 11.4, 11.7, 11.7, 11.7, 11.7, 11.7, 12.0, 12.0, 12.0, 12.0, 12.0, 12.3, 12.3, 12.3, 12.3, 12.3, 12.6, 12.6, 12.6, 12.6, 12.6, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 12.9, 13.1, 13.1, 13.1, 13.1, 13.1, 13.4, 13.4, 13.4, 13.4, 13.4, 13.8, 13.8, 13.8, 13.8, 13.8, 14.1, 14.1, 14.1, 14.1, 14.1, 14.4, 14.4, 14.4, 14.4, 14.4, 14.8, 14.8, 14.8, 14.8, 14.8, 15.1, 15.1, 15.1, 15.1, 15.1, 15.4, 15.4, 15.4, 15.4, 15.4, 15.7, 15.7, 15.7, 15.7, 15.7, 16.0, 16.0, 16.0, 16.0, 16.0, 16.3, 16.3, 16.3, 16.3, 16.3, 16.6, 16.6, 16.6, 16.6, 16.6, 16.9, 16.9, 16.9, 16.9, 16.9, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2, 17.2 };
int main()
{
#ifdef LOCAL
    freopen("E:\input.txt", "r", stdin);
#endif 
    int t;
    cin >> t;
    while (t--)
    {
        int x;
        cin >> x;
        printf("%.1f\n", ans[x]);
    }
    return TIME;
}