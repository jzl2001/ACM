#include<stdio.h>
#include<iostream>
#include<queue>
using namespace std;
int n, k,t=0;
int vis[100010];
const int MAXN = 100000;
struct node{
	int x, t;
};
int bfs(){
	queue<node>q;
	node now;
	now.x = n,now.t=0;
	q.push(now);
	while (!q.empty())
	{
		int x = q.front().x,t=q.front().t;
		q.pop();
		if (vis[x])
			continue;
		vis[x] = 1;
		if (x == k)
			return t;
		node next;
		if (x+1>=0&&x+1<=MAXN)
		    next.x= x + 1 , next.t = t + 1,q.push(next);
		if (x - 1 >= 0 && x - 1 <= MAXN)
			next.x = x - 1, next.t = t + 1,q.push(next);
		if (x * 2 >= 0 && x * 2 <= MAXN)
			next.x = 2*x, next.t = t + 1,q.push(next);
	}
    return 0;
}
int main(){
	cin >> n >> k;
	cout << bfs() << endl;
	return 0;
}