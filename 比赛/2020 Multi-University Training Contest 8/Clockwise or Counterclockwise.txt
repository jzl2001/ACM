Time Limit: 2000/2000 MS (Java/Others)    Memory Limit: 524288/524288 K (Java/Others)
Total Submission(s): 510    Accepted Submission(s): 319


Problem Description
It is preferrable to read the pdf statment.

After some basic geometric lessons, Cuber QQ has learned that one can draw one and only one circle across three given distinct points, on a 2D plane. Specialized in art, Cuber QQ has shown remarkable skills to draw circle in one stroke, especially when the stroke is done clockwise. He wonder whether he will be able to do that if 3 points has been given.

In particular, he is given three distinct points A(x1,y1), B(x2,y2), C(x3,y3) which lie on a circle centered at O(0,0). Imagine starting from A, he draws the circle across B and finally gets C. Determine whether he is drawing clockwise or counterclockwise.
 

Input
The first line contains an integer T (1≤T≤1 000), denoting the number of test cases.

In the next T lines, each line contains six space-separated integers x1, y1, x2, y2, x3, y3 (−109≤x1,y1,x2,y2,x3,y3≤109) denoting the coordinate of A, B and C.

It is guaranteed that A, B, C are pairwise distinct and |AO|=|BO|=|CO|>0.
 

Output
For each test case, output one line containing ''Clockwise'' or ''Counterclockwise''.
 

Sample Input
3
1 2 2 1 -1 -2
4 3 -4 3 3 4
4 -3 4 3 3 4
 

Sample Output
Clockwise
Clockwise
Counterclockwise
 

Source
2020 Multi-University Training Contest 8
 

Recommend
IceyWang   |   We have carefully selected several similar problems for you:  6900 6899 6898 6897 6896 
 

Statistic | Submit | Discuss | Note
题意给出三个点ABC，问从A到B到C是顺时针还是逆时针，求向量AB*向量BC若是负的则是顺时针，
否则是逆时针。
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 1e9 + 7;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
template<class T> T gcd(T a, T b) { return b == 0 ? a : gcd(b, a % b); };
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
const int N = 1e5 + 10;
struct node
{
	ll x, y;
}a[N];
int main()
{
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	int t;
	cin >> t;
	while (t--)
	{
		for (int i = 1; i <= 3; i++)
		{
			scanf("%lld%lld", &a[i].x, &a[i].y);
		}
		a[4].x = a[2].x - a[1].x;
		a[4].y = a[2].y - a[1].y;
		a[5].x = a[3].x - a[2].x;
		a[5].y = a[3].y - a[2].y;
		if (a[4].x * a[5].y - a[4].y * a[5].x <= 0)
			puts("Clockwise");
		else
			puts("Counterclockwise");
	}
	return TIME;
}
