Once there was a contest, where the last problem was about coordinate paper. You were given a piece of coordinate paper, where there were grids of n rows and 10
​100
​​  columns. The grids were initially white, and you might paint some of them black. In that problem, you were required to paint the paper in a special way. Suppose the number of black grids in the i-th row is a
​i
​​ . Your painting was supposed to satisfy that

for any i, a
​i
​​ ≥0.
∑
​i=1
​n
​​ a
​i
​​ =s.
for any i∈{1,…,n−1}, either a
​i
​​ −a
​i+1
​​ =k or a
​i+1
​​ −a
​i
​​ =1.
Can you still find an answer to that problem?

Input
The only line contains three integers n, k and s (1≤n,k≤10
​5
​​ , 1≤s≤10
​18
​​ ).

Output
If there is no solution, print ``-1'' (without quotes).

Otherwise, print the n integers a
​1
​​ ,…,a
​n
​​ . Any answer satisfying all requirements will be accepted.

In this problem, extra blank characters will be ignored when your answer is judged.

Example
Input

3 2 15
Output

6 4 5

题意：给出n，k，s。
构造一个长度为n的数字序列，每项≥0，且每项要么比前一项小k要
么比前一项大1，且数字之和等于s。
思路：最初假设全部为差值1递增，求出一个最小的a1满足总和≥s。
此时设c = s - sum。
如果在第一项加1，则总体答案会加n，如果某项变成比前面小k，则答案会减去
(n - i + 1) * (k + 1)
所以设x * (k + 1)  - y * n = c，因为x跟y均为非负整数，所以对满足条件的x，y
判断几十组答案即可。
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read() { static char buf[1000000], *p1 = buf, *p2 = buf; int x = false; char ch = gc; bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
template<class T> T gcd(T a, T b) { return b == 0 ? a : gcd(b, a % b); };
ll fpow(ll a, ll b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }


const int mod = 1e9 + 7;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
const int N = 1e5 + 10;

ll a[N], b[N];
ll n, k, s, x, y;
ll calc(ll s, ll n)
{
	return (s + s + n - 1) * n / 2;
}
ll exgcd(ll a, ll b, ll &x, ll &y)
{
	if (b == 0)
	{
		x = 1;
		y = 0;
		return a;
	}
	ll d = exgcd(b, a % b, x, y);
	ll t = x;
	x = y;
	y = t - (a / b) * y;
	return d;
}
bool check(ll x, ll y)
{
	ll sum = 0;
	if (x > n * (n + 1) / 2 - n)
		return 0;
	b[1] = a[1] + y;
	for (int i = 2; i <= n; i++)
	{
		if (i >= 2 && x >= (n - i + 1) && b[i - 1] >= k)
			x -= (n - i + 1), b[i] = b[i - 1] - k;
		else
			b[i] = b[i - 1] + 1;
		if (b[i] < 0)
			return 0;
	}
	if (x != 0)
		return 0;
	for (int i = 1; i <= n; i++)
		printf("%lld%c", b[i], i == n ? '\n' : ' ');
	return 1;
}
void calc(ll a, ll b, ll c, ll& x, ll& y) // a * x + b * y = c
{
	ll d = exgcd(a, b, x, y);
	if (c % d)
	{
		puts("-1");
		exit(0);
	}
	ll k = c / d;
	x *= k;
	ll bb = b;
	b /= d;
	if (b < 0)
		b = -b;
	int cnt = 0;
	x = (x % b + b) % b;
	for (;; x = x + b)
	{
		y = (c - a * x) / bb;
		if (y >= 0)
			break;
	}
	for (; cnt <= 50; x = x + b)
	{
		y = (c - a * x) / bb;
		++cnt;
		if (check(x, y))
			return;
	}
	puts("-1");
}
int main()
{
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	cin >> n >> k >> s;
	ll sum = 0;
	ll L = 0, R = s / n; //防止溢出，R肯定不会大于s/n。
	a[1] = -1;
	while (L <= R)
	{
		ll mid = L + R >> 1;
		if (calc(mid, n) >= s)
			R = mid - 1, a[1] = mid;
		else
			L = mid + 1;
	}
	if (!~a[1])
		puts("-1");
	else
	{
		for (int i = 2; i <= n; i++)
			a[i] = a[i - 1] + 1;
		calc(k + 1, -n, calc(a[1], n) - s, x, y);// x * (k + 1)  - y * n = c
	}
	return TIME;
}
