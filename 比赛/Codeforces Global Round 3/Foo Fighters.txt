每个物品有两个属性， A 与 B 
求一个数 and 完 B 得到的数如果二进制位上1的个数为奇数
则物品价值相反，要求最后的物品A属性之和与原来相同
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 1e9 + 7;
const int N = 1e6 + 10;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
pair<int, ll>p[N];
vector<int>G[N];
ll ans;
int main()
{
#ifdef LOCAL
	freopen("D:/input.txt", "r", stdin);
#endif
	int n;
	cin >> n;
	ll sum = 0;
	for (int i = 1; i <= n; i++)
	{
		scanf("%d%lld", &p[i].first, &p[i].second);
		for (int j = 62; j >= 0; j--)
		{
			if (p[i].second &(1LL << j))
			{
				Break(G[j].push_back(i))
			}
		}
		sum += p[i].first;
	}
	for (int i = 0; i <= 62; i++)
	{
		ll tot = 0;
		if (G[i].empty())
			continue;
		for (auto & j : G[i])
		{
			tot += p[j].first;
		}
		if (tot < 0 && sum < 0 || tot > 0 && sum > 0)
		{
			ans |= 1LL << i;
			for (int j = 1; j <= n; j++)
			{
				if (p[j].second &(1LL << i))
					p[j].first = -p[j].first;
			}
		}
	}
	cout << ans << endl;
	return TIME;
}