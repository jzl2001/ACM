#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 100000;
const int N = 3e5 + 10;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
struct node
{
	int a, b;
	int pos;
}a[N], b[N];
bool cmp1(node a, node b)
{
	return a.b > b.b;
}
bool cmp2(node a, node b)
{
	return a.b < b.b;
}
int main()
{
#ifdef LOCAL
	freopen("D:/input.txt", "r", stdin);
#endif
	int n, cnt1 = 0, cnt2 = 0;
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		int L, R;
		scanf("%d%d", &L, &R);
		if (L < R)
		{
			a[++cnt1].a = L, a[cnt1].b = R, a[cnt1].pos = i;
		}
		else
			if (L > R)
			{
				b[++cnt2].a = L, b[cnt2].b = R, b[cnt2].pos = i;
			}
	}		
	if (cnt1 > cnt2)
	{
		sort(a + 1, a + cnt1 + 1, cmp1);
		cout << cnt1 << endl;
		for (int i = 1; i <= cnt1; i++)
			cout << a[i].pos << " ";
	}
	else
	{
		sort(b + 1, b + cnt2 + 1, cmp2);
		cout << cnt2 << endl;
		for (int i = 1; i <= cnt2; i++)
			cout << b[i].pos << " ";
	}
	return TIME;
}