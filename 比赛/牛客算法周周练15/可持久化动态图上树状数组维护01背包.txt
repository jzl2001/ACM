链接：https://ac.nowcoder.com/acm/contest/8018/B
来源：牛客网

时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 32768K，其他语言65536K
64bit IO Format: %lld
题目描述 
你有一个长度为 n 序列 {a}(序列下标从1开始) ，每次可以从任意位置 i 花费 ai*i 的代价来把 ai 删除。
注意，删除后 ai 后面的数会依次向前补上（下标 -1 ) 。
求把整个序列删完的最小代价。
输入描述:
第一行一个整数 n ，第二行 n 个整数代表该序列。
输出描述:
一行一个整数表示删完序列的最小代价。
示例1
输入
复制
2
3 2
输出
复制
5
备注:
1\leq n \leq10^6，|a_i| \leq 10^71≤n≤10 
6
 ，∣a 
i
​	
 ∣≤10 
7
 

保证答案在-2^63到2^63-1 范围内
思维
#include <iostream>
#include <set>
#include <bits/stdc++.h>
//#include <unordered_map>
#include <assert.h>
#include <time.h>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <string>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 1e9 + 7;
const int N = 1e6 + 10;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }

ll a[N];
ll b[N];
int main()
{
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	ll ans = 0;
	int n, cnt = 0;
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		scanf("%lld", &a[i]);
		if (a[i] < 0)
		{
			ans += a[i] * i;
		}
		else
			ans += a[i];
	}
	cout << ans << endl;
	return TIME;
}