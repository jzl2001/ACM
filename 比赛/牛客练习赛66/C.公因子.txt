链接：https://ac.nowcoder.com/acm/contest/6112/C
来源：牛客网

时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 262144K，其他语言524288K
64bit IO Format: %lld
题目描述 
牛妹是一个喜欢公因子的女孩子。
定义 n 个整数 a_1, a_2, \ldots, a_na 
1
​	
 ,a 
2
​	
 ,…,a 
n
​	
  的 \gcdgcd 为最大的正整数 p 满足对于所有 1\le i\le n1≤i≤n，p 整除 a_ia 
i
​	
 。
牛妹有一个长度为 n 的整数序列 a_1, a_2, \ldots , a_na 
1
​	
 ,a 
2
​	
 ,…,a 
n
​	
 。她希望能求出一个非负整数 x，使得 a_1 + x, a_2 + x, \ldots , a_n + xa 
1
​	
 +x,a 
2
​	
 +x,…,a 
n
​	
 +x 的 \gcdgcd 最大。
牛妹不满足于只求出这个最大的 \gcdgcd，所以她希望你还能帮她求出在满足 \gcdgcd 最大时最小的 x。
输入描述:
第一行一个整数 n\ (2\le n\le 10^6)n (2≤n≤10 
6
 )，表示牛妹的序列长度。
第二行 n 个整数 a_1, a_2, \ldots , a_n\ (-10^{18}\le a_i\le 10^{18})a 
1
​	
 ,a 
2
​	
 ,…,a 
n
​	
  (−10 
18
 ≤a 
i
​	
 ≤10 
18
 )，表示牛妹的序列。
输入保证存在最大的 \gcdgcd。
输出描述:
输出一行两个整数，分别表示最大的 \gcdgcd 和满足 \gcdgcd 最大时最小的 x。
示例1
输入
复制
3
-3 1 3
输出
复制
2 1
<gcd>
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
#ifdef LOCAL
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
typedef long long ll;
const int N = 2e6 + 10;
const int mod = 998244353;
ll gcd(ll a, ll b)
{
    return b == 0 ? a : gcd(b, a % b);
}
ll gcd_(ll* a, int n)
{
    int ans = 0;
    for (int i = 1; i <= n; i++)
    {
        ans = gcd(ans, a[i]);
    }
    return ans;
}
ll a[N], b[N];
int main()
{
#ifdef LOCAL
    freopen("E:/input.txt", "r", stdin);
#endif
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        scanf("%lld", &a[i]);
    }
    sort(a + 1, a + n + 1, greater<ll>());
    ll g = 0;
    for (int i = 1; i < n; i++)
    {
        b[i] = a[i] - a[i + 1];
        g = gcd(g, b[i]);
    }
    ll ans = 0;
    if (a[1] > 0)
    {
        if (a[1] % g == 0)
        {
            cout << g << " " << 0 << endl;
        }
        else
            cout << g << " " << (g - a[1] % g) << endl;
    }
    else
    {
        if (a[1] % g == 0)
        {
            cout << g << " " << 0 << endl;
        }
        else
            cout << g << " " << abs(a[1] % g) << endl;
    }
    return TIME;
}