#include <bits/stdc++.h>
using namespace std;
#define sz(a) ((int)(a).size())
typedef long long ll;
#define me(a, b) (memset(a, b, sizeof a))
const int INF = 0x3f3f3f3f;
const int MAXN = 1e5 + 10;

int ans = 0x3f3f3f3f;
struct node
{
	int to, v;
};
int vis[110];
int n;
vector<node>G[110];
void dfs(int x, int fa, int tot)
{
	if (x == 1 && fa)
	{
		ans = min(ans, tot);
		return;
	}
	for (auto it:G[x])
	{
		if (fa == it.to)
			continue;
		dfs(it.to, x, it.v + tot);
	}
}
int main(){
	while (cin >> n)
	{
		for (int i = 1; i <= 100; i++)
			G[i].clear();
		ans = 0x3f3f3f3f;
		int x, y, z;
		for (int i = 1; i <= n; i++)
		{
			scanf("%d%d%d", &x, &y, &z);
			G[x].push_back({ y, 0 });
			G[y].push_back({ x, z });
		}
		dfs(1, 0, 0);
		cout << ans << endl;
	}
	return 0;
}