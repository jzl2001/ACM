#include <bits/stdc++.h>
//#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
 
#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 1e9 + 7;
const int N = 2e5 + 10;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
int c[N];
int a[N];
int b[N];
int main()
{
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	string s;
	cin >> s;
	int len = s.size();
	s = "0" + s;
	int mx = 0;
		for (int i = 1; i <= len; i++)
		{
			a[i] = a[i - 1];
			if (s[i] == '(')
				a[i] = a[i - 1] + 1;
		}
		for (int i = len; i >= 1; i--)
		{
			b[i] = b[i + 1];
			if (s[i] == ')')
				b[i] = b[i + 1] + 1;
		}
		int k = 0;
		for (int i = 1; i <= len; i++)
		{
			int u = min(a[i], b[i]);
			if (u > mx)
			{
				mx = u;
				k = i;
			}
		}
		if (mx == 0)
			cout << "0" << endl, exit(0);
		int cnt = 0;
		vector<int>v1, v2;
		for (int i = 1; i <= len; i++)
		{
			if (s[i] == '(')
				cnt++, v1.push_back(i);
			if (cnt == mx)
				break;
		}
		cnt = 0;
		for (int i = len; i >= 1; i--)
		{
			if (s[i] == ')')
				cnt++, v2.push_back(i);
			if (cnt == mx)
				break;
		}
		cout << 1 << endl;
		cout << 2 * mx << endl;
		for (auto & i : v1)
		{
			cout << i << " ";
		}
		sort(v2.begin(), v2.end());
		for (auto &i : v2)
		{
			cout << i << " ";
		}
	return TIME;
}