import java.math.BigInteger;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Scanner;
 
public class Main {
 
	static int N = (int) (1e4 + 10), cnt = 0;
	static int[] p = new int[N];
	static int[] c = new int[N];
	static boolean[] vis = new boolean[1010];
 
	public static void prime() {
		c[1] = c[0] = 1;
		for (int i = 2; i < N; i++) {
			if (c[i] == 0) {
				++cnt;
				p[cnt] = i;
			}
			for (int j = 1; j <= cnt && i * p[j] < N; j++) {
				c[i * p[j]] = 1;
				if ((i % p[j]) == 0)
					break;
			}
 
		}
	}
 
	public static void main(String[] args)
    {
    	Scanner cin = new Scanner(System.in);
    	prime();
    	int n;
    	n = cin.nextInt();
    	int l = 0, r = 0;
    	for(int i = 1; i <= cnt; i++)
    	{
    		if(p[i] >= n)
    		{
    			r = p[i];
    			l = p[i - 1];
    			break;
    		}
    	}
    	if(r == n)
    	{
    		System.out.println(r);
    		for(int i = 1; i < n; i++)
    			System.out.println(i + " " + (i + 1));
    		System.out.println(n + " " + 1);
    	}
    	else
    	{
    		System.out.println(r);
    		for(int i = 1; i < l; i++)
    			System.out.println(i + " " + (i + 1));
    		System.out.println(l + " " + 1);
    		int tot = (r - (n - l + 1) - l);
    		int len = tot;
    		for (int i = 2; len != 0 && i + 2 <= l - 1; i++)
    		{
    			if(vis[i] == true)
    				continue;
    			len--;
    			System.out.println(i + " " + (i + 2));
    			vis[i] = vis[i + 2] = true;
    		}
    		for (int i = l + 1; i <= n; i++)
    			System.out.println((i - 1) + " " + i);
    		System.out.println(n + " " + 1);
    	}
    }
}
