#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
 
#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 100000;
const int N = 1e4 + 10;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
map<int, int>mp;
pair<int, int> solve(int num)
{
	int cnt1 = 0;
	int cnt = 0;
	while (num)
	{
		if (num % 2)
			++cnt1;
		cnt++;
		num >>= 1;
	}
	return{ cnt, cnt1 == cnt };
}
int main()
{
#ifdef LOCAL
	freopen("D:/input.txt", "r", stdin);
#endif
	int n;
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		int num;
		cin >> num;
		pair<int, int>p = solve(num);
		if (p.second == 0) 
		{
			cout << (1 << p.first) - 1 << endl;
		}
		else
		{
			if (mp.find(num) != mp.end())
				cout << mp[num] << endl;
			else
				for (int i = num / 2; i >= 1; i--)
				{
					if (num % i == 0)
					{
						cout << i << endl;
						mp[num] = i;
						break;
					}
				}
		}
	}
	return TIME;
}