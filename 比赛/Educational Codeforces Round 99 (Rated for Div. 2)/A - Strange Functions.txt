A. Strange Functions
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
Let's define a function f(x) (x is a positive integer) as follows: write all digits of the decimal representation of x backwards, then get rid of the leading zeroes. For example, f(321)=123, f(120)=21, f(1000000)=1, f(111)=111.

Let's define another function g(x)=xf(f(x)) (x is a positive integer as well).

Your task is the following: for the given positive integer n, calculate the number of different values of g(x) among all numbers x such that 1≤x≤n.

Input
The first line contains one integer t (1≤t≤100) — the number of test cases.

Each test case consists of one line containing one integer n (1≤n<10100). This integer is given without leading zeroes.

Output
For each test case, print one integer — the number of different values of the function g(x), if x can be any integer from [1,n].

Example
inputCopy
5
4
37
998244353
1000000007
12345678901337426966631415
outputCopy
1
2
9
10
26
Note
Explanations for the two first test cases of the example:

if n=4, then for every integer x such that 1≤x≤n, xf(f(x))=1;
if n=37, then for some integers x such that 1≤x≤n, xf(f(x))=1 (for example, if x=23, f(f(x))=23,xf(f(x))=1); and for other values of x, xf(f(x))=10 (for example, if x=30, f(f(x))=3, xf(f(x))=10). So, there are two different values of g(x).
题意：一个数字的f(x)是反转一下，然后g(x) = x / f(f(x))。
对于一个没有末尾0的数字，答案就是1，如果有末尾0了，则有几个0就是10的几次方。
给出n求1~n的g(x)有多少种。
答案就是串的长度。
#include <stdio.h>
#include <string.h>
typedef long long ll;

#define N 110

char s[N];
int main()
{
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	int t;
	scanf("%d", &t);
	while (t--)
		scanf("%s", s + 1), printf("%d\n", strlen(s + 1));
	return 0;
}