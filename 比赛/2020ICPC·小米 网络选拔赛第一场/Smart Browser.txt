链接：https://ac.nowcoder.com/acm/contest/7501/C
来源：牛客网

In some social platforms, there are some netizen who like to post "www". Since the string is like the grass, which contains plenty of "/\" shapes, so there are also some netizen who post "grass".

As a fast, smart, and convenient browser, MI Browser can recognize this kind of text and show some special effects. Specifically, given a string, MI Browser will determine the number of "/\" shapes made by character "w", where "w" itself and the gap between two adjacent "w"s both give one `/\` shape. If still not clear, please turn to sample input/output for more details.

As a MI fan, you want to detect the relationship between the special effects and the number of "/\" shapes, so the thing you should do first is to determine the number of "/\" shapes by yourself.

输入描述:
Only one line containing a string s~(1\le |s| \le 10^5)s (1≤∣s∣≤10 
5
 ).

It's guaranteed that s only contains lowercase letters.
输出描述:
Only one line containing one integer, denoting the answer.
示例1
输入
复制
wwwvwwvw
输出
复制
9
说明
In "www", there are 5 "/\" shapes.

In "ww", there are 3 "/\" shapes.

In "w", there is only 1 "/\" shape.
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
const int mod = 1e9 + 7;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
template<class T> T gcd(T a, T b) { return b == 0 ? a : gcd(b, a % b); };
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
const int N = 2e5 + 10;

char s[N];
int main()
{
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	scanf("%s", s + 1);
	int len = strlen(s + 1);
	int cnt = 0, ans = 0;
	for (int i = 1; i <= len; i++)
	{
		if (s[i] == 'w')
			cnt++;
		else
			if (cnt)
			{
				ans += 2 * cnt - 1;
				cnt = 0;
			}
	}
	if (cnt)
		ans += 2 * cnt - 1;
	cout << ans << endl;
	return TIME;
}