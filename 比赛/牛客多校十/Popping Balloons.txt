#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
 
#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define continue(x) { x; continue; }
#define break(x) { x; break; }
const int N = 6e5 + 10;
int mod = 998244353;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
int a[N];
int b[N];
int num[N];
multiset<int>s;
vector<int>G[N];
void update(int x, int val)
{
    s.erase(s.find(num[x]));
    num[x] += val;
    s.insert(num[x]);
}
int main(){
#ifdef LOCAL
    freopen("D:/input.txt", "r", stdin);
#endif
    int ans = 0;
    int n, r;
    cin >> n >> r;
    int MX = 0;
    for (int i = 1; i <= n; i++)
        scanf("%d%d", &a[i], &b[i]), a[i] += 2 * r, b[i] += 2 * r;
    for (int i = 1; i <= n; i++)
    {
        G[a[i] - r].push_back(b[i]); // 横
        G[a[i]].push_back(b[i]);
        G[a[i] + r].push_back(b[i]);
        num[b[i]]++;   // 竖
        num[b[i] + r]++;
        num[b[i] - r]++;
    }
    for (int i = r; i <= N - r; i++)
        s.insert(num[i]);
    for (int i = r; i <= N - r; i++)
    {
        int x = G[i].size();
        for (auto &j : G[i])  // 这横的一枪造成的影响， 影响这这个G[i]， 自然G[i - r] G[i + r]也会受影响
            update(j, -1), update(j - r, -1), update(j + r, -1);
        if (x + *s.rbegin() > ans)
            ans = x + *s.rbegin();
        for (auto &j : G[i]) // 再恢复
            update(j, 1), update(j - r, 1), update(j + r, 1);
    }
    cout << ans << endl;
    return TIME;
}