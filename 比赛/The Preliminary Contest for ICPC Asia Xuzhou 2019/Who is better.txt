/*
使用excrt算出n的值, 再判断n是否为斐波那契数列中的元素即可。
*/
#include <bits/stdc++.h>
//#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int N = 1e6 + 10;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
ll fpow(ll a, ll b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
ll exgcd(ll a, ll b, ll& x, ll& y) { if (!b) { x = 1, y = 0; return a; } ll d = exgcd(b, a % b, y, x); y -= (a / b) * x; return d; }
ll mul(ll a, ll b, ll mod)
{
	int flag = b < 0 ? 1 : 0;
	ll res = 0;
	b = abs(b);
	while (b)
	{
		if (b & 1)
			res = (res + a) % mod;
		b >>= 1;
		a = (a + a) % mod;
	}
	if (flag)
		return -res % mod;
	else
		return res % mod;
}
ll m[N], a[N];
ll CRT(int n)
{
	ll x, y;
	for (int i = 1; i < n; i++)
	{
		ll d = exgcd(m[0], m[i], x, y);
		ll u = a[i] - a[0];
		if (u % d != 0)
			return -1;
		x = mul(x, u, m[i]) / d;
		m[i] /= d;
		x = (x % m[i] + m[i]) % m[i];
		a[0] += m[0] * x;
		m[0] *= m[i];
	}
	return a[0];
}
ll f[80];
void init()
{
	f[1] = 1;
	f[2] = 1;
	for (int i = 3; i < 80; i++)
		f[i] = f[i - 1] + f[i - 2];
}
int main()
{
#ifdef LOCAL
	freopen("D:/input.txt", "r", stdin);
#endif
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> m[i] >> a[i];
	}
	ll ans = CRT(n);
	if (ans == -1)
		cout << "Tankernb!" << endl, exit(0);
	init();
	//cout << f[79] << endl;
	for (int i = 0; i < 80; i++)
	{
		if (f[i] == ans)
			cout << "Lbnb!" << endl, exit(0);
	}
	cout << "Zgxnb!" << endl, exit(0);
	return TIME;
}