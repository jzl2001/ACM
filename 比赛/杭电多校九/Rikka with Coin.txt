#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define continue(x) { x; continue; }
#define break(x) { x; break; }
ll mod = 1e9 + 7;
ll fpow(ll a, ll b) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
const int N = 1e5 + 10;
int a[N];
int main()
{
#ifdef LOCAL
	freopen("D:/input.txt", "r", stdin);
#endif
	int t;
	cin >> t;
	while (t--)
	{
		int flag = 0, _100 = 0;
		int n;
		cin >> n;
		for (int i = 1; i <= n; i++)
		{
			scanf("%d", &a[i]);
			if (a[i] % 10 != 0)
				flag = 1;
		}
		if (flag)
			continue(cout << -1 << endl);
		int MI = 0x3f3f3f3f;
		for (int i = 0; i <= 1; i++) // 1
			for (int j = 0; j <= 3; j++) // 2
				for (int k = 0; k <= 1; k++) // 5
				{
					int MX = 0;
					int flag = 0;
					for (int u = 1; u <= n; u++)
					{
						if (a[u] < 100)
						{
							if (!a[u])
								continue;
							if (a[u] == 10)
							{
								if (i >= 1)
									continue;
							}
							else
								if (a[u] == 20)
								{
									if (j >= 1)
										continue;
								}
								else
									if (a[u] == 30)
									{
										if (j >= 1 && i >= 1)
											continue;
									}
									else
										if (a[u] == 40)
										{
											if (j >= 2)
												continue;
										}
										else
											if (a[u] == 50)
											{
												if ((j >= 2 && i >= 1) || k >= 1)
													continue;
											}
											else
												if (a[u] == 60)
												{
													if (j >= 3 || (k >= 1 && i >= 1))
														continue;
												}
												else
													if (a[u] == 70)
													{
														if ((j >= 1 && k >= 1) || (i >= 1 && j >= 3))
															continue;
													}
													else
														if (a[u] == 80)
														{
															if (i >= 1 && j >= 1 && k >= 1)
																continue;
														}
														else
															if (a[u] == 90)
															{
																if (j >= 2 && k >= 1)
																	continue;
															}
						}
						else // ´óÓÚ100
						{
							if (a[u] % 100 + 100 == 110)
							{
								if (j >= 3 && k >= 1)
								{
									MX = max(MX, (a[u] - 100) / 100);
									continue;
								}
									
							}
							else
								if (a[u] % 100 + 100 == 120)
								{
									if (i >= 1 && j >= 3 && k >= 1)
									{
										MX = max(MX, (a[u] - 100) / 100);
										continue;
									}
								}
								else
									if (a[u] % 100 + 100 == 100)
									{
										if (i >= 1 && j >= 2 && k >= 1)
										{
											MX = max(MX, (a[u] - 100) / 100);
											continue;
										}
									}
									MX = max(MX, a[u] / 100);
									int tem = a[u];
									a[u] %= 100;
									if (!a[u])
									{
										a[u] = tem;
										continue;
									}			
									if (a[u] == 10)
									{
										a[u] = tem;
										if (i >= 1)
											continue;
									}
									else
										if (a[u] == 20)
										{
											a[u] = tem;
											if (j >= 1)
												continue;
										}
										else
											if (a[u] == 30)
											{
												a[u] = tem;
												if (j >= 1 && i >= 1)
													continue;
											}
											else
												if (a[u] == 40)
												{
													a[u] = tem;
													if (j >= 2)
														continue;
												}
												else
													if (a[u] == 50)
													{
														a[u] = tem;
														if ((j >= 2 && i >= 1) || k >= 1)
															continue;
													}
													else
														if (a[u] == 60)
														{
															a[u] = tem;
															if (j >= 3 || (k >= 1 && i >= 1))
																continue;
														}
														else
															if (a[u] == 70)
															{
																a[u] = tem;
																if ((j >= 1 && k >= 1) || (i >= 1 && j >= 3))
																	continue;
															}
															else
																if (a[u] == 80)
																{
																	a[u] = tem;
																	if (i >= 1 && j >= 1 && k >= 1)
																		continue;
																}
																else
																	if (a[u] == 90)
																	{
																		a[u] = tem;
																		if (j >= 2 && k >= 1)
																			continue;
																	}
						}
						flag = 1;
					}
					if (!flag)
					{
							MI = min(MI, i + j + k + MX);
					}
				}
				cout << MI << endl;
	}
	return TIME;
}