#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
const int N = 1e5 + 10;
const int mod = 1e9 + 7;
int vis[N];
int num[2][2];
int cnt[N];
int main()
{
#ifdef LOCAL
	freopen("D:/input.txt", "r", stdin);
#endif
	int n, m;
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i++)
		scanf("%d", &vis[i]);
	for (int i = 1; i <= m; i++)
	{
		int x, y;
		scanf("%d%d", &x, &y);
		if (vis[x] != vis[y])
			cnt[x]++, cnt[y]++;
	}
	for (int i = 1; i <= n; i++)
	{
		if (vis[i])
		{
			if (cnt[i]) // 如果当前没跟其他类连
				num[1][0]++;  // 跟0类相连的1类的个数
			else
				num[1][1]++; // 没有跟0类相连的1类的个数
		}
		else
		{
			if (cnt[i])
				num[0][1]++; // 跟1类相连的0类的个数
			else
				num[0][0]++; // 没有跟1类相连的0类的个数
		}
	}
	int ans = 0;
	for (int i = 1; i <= n; i++)
	{
		ans = 0;
		if (vis[i])
		{
			ans = num[1][0] + num[1][1] - 1 + cnt[i]; //同类以及相连的代价为1， 去掉本身
			ans += (num[0][1] - cnt[i]) * 2; // 0类跟1类相连 减去跟i相连的， 代价为2
			ans += num[0][0] * (cnt[i] ? 2 : 3); // 没有跟0相连的代价为3， 因为要先转到1再到0再到0
		}
		else
		{
			ans = num[0][1] + num[0][0] - 1 + cnt[i];
			ans += (num[1][0] - cnt[i]) * 2;
			ans += num[1][1] * (cnt[i] ? 2 : 3);
		}
			printf("%d ", ans);
	}
	return TIME;
}
