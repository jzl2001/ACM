/*
记在状压dp里
*/
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
 
#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 1e9 + 7;
const int N = 2e6 + 10;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
ll d[N];
ll f[N];
ll two[N];
int vis[N];
int pre[N];
int	MX = (1 << 19);
bool is_prime(int num)
{
	int u = sqrt(num);
	for (int i = 2; i <= u; i++)
	{
		if (num % i == 0)
			return false;
	}
	return true;
}
int main()
{
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	two[0] = 1;
	for (int i = 1; i <= N - 10; i++)
	{
		two[i] = two[i - 1] * 2LL % mod;
	}
	int cnt = 0;
	int n;
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		int num;
		cin >> num;
		vis[num]++;
	}
	for (int i = 2; i <= 70; i++)
	{
		if (is_prime(i))
			pre[cnt++] = i;
	}
	d[0] = 1;
	for (int j = 1; j <= 70; j++)
	{
		if (vis[j] == 0)
			continue;
		int num = 0;
		int u = j;
		for (int i = 0; i < cnt; i++)
		{
			while (u % pre[i] == 0)
				u /= pre[i], num ^= (1 << i);
		}
		for (int i = 0; i < MX; i++)
		{
			f[i] = (two[vis[j] - 1]) * (d[i] + d[i ^ num]) % mod;
		}
		swap(d, f);
	}
	cout << (d[0] - 1 + mod) % mod << endl;
	return TIME;
}