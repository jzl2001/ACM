/*
快速k置换，A * p ^ k = B。
已知序列A,B求解p。
https://ac.nowcoder.com/acm/contest/7669/J
*/
include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 998244353;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
const int N = 1e5 + 10;
int a[N], b[N], p[N];
int vis[N];
int gcd(int a, int b)
{
	return b == 0 ? a : gcd(b, a % b);
}
int main()
{
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	int n, k, flag = 1;
	cin >> n >> k;
	for (int i = 1; i <= n; i++)
	{
		scanf("%d", &a[i]);
		b[i] = a[i];
	}
	for (int i = 1; i <= n &&  flag; i++)
	{
		if (!vis[i])
		{
			vector<int> v, v2;
			int j = i;
			while (!vis[j])
				vis[j] = 1, v.push_back(j), j = b[j];
			if (gcd(v.size(), k) > 1)
			{
				flag = 0;
				break;
			}
			v2.resize(v.size());
			for (int i = 0; i < v.size(); i++)
			{
				v2[1LL * i * k % v.size()] = v[i];
			}
			for (int i = 0; i < v2.size(); i++)
			{
				p[v2[i]] = v2[(i + 1) % v2.size()];
			}
		}
	}
	if (!flag)
	{
		puts("-1");
	}
	else
	{
		for (int i = 1; i <= n; i++)
		{
			printf("%d ", p[i]);
		}
		puts("");
	}
	return TIME;
}
