链接：https://ac.nowcoder.com/acm/contest/7669/G
来源：牛客网

Greater and Greater
时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 262144K，其他语言524288K
64bit IO Format: %lld
题目描述 
Given a sequence {A}A of size {n}n and a sequence {B}B of size {m}m, determine the number of subintervals(called {S}S) of size {m}m in {A}A satisfying \forall i \in \{1, 2, \cdots, m\}, S_i \ge B_i∀i∈{1,2,⋯,m},S 
i
​	
 ≥B 
i
​	
 .
输入描述:
The first line contains two integers n,m~(1\leq n\leq 150000, 1\leq m\leq \min\{n, 40000\})n,m (1≤n≤150000,1≤m≤min{n,40000}).
The second line contains {n}n integers A_1, A_2, \cdots, A_n~(1\leq A_i\leq 10^9)A 
1
​	
 ,A 
2
​	
 ,⋯,A 
n
​	
  (1≤A 
i
​	
 ≤10 
9
 ), denoting the sequence {A}A.
The third line contains {n}n integers B_1, B_2, \cdots, B_n~(1\leq B_i\leq 10^9)B 
1
​	
 ,B 
2
​	
 ,⋯,B 
n
​	
  (1≤B 
i
​	
 ≤10 
9
 ), denoting the sequence {B}B.
输出描述:
Only one line containing one integer, denoting the answer.
示例1
输入
复制
6 3
1 4 2 8 5 7
2 3 3
输出
复制
2
说明
The two subintervals are {[2, 8, 5], [8, 5, 7]}[2,8,5],[8,5,7].
题意：给出长度为n的序列a和长度为m的序列b。
求a中有多少个长度为m的子串对应每位元素都大于b。
思路：用二进制表示a中所有元素大于b中某个元素的情况。
样例：
011111
010111
010111

第二个数字左移一位，第三个数字左移两位。
011111
101110
011100
有两列全部为1所以答案为2.
做法排序用bitset来存大小情况，每次计算当前这个数字的这行右移后的情况。
j指针控制a数组的下标，因为排完序之后当前i小于，则i-1一定也小于，这位标记为1后，
后面也一定是1，所以只用维护一个now即可，每次&一下。因为是倒着来从前到后至1，所以
这里写起来是右移。
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 998244353;
const int N = 1e6 + 10;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
vector<pair<int, int>>a, b;
bitset<150010>ans, now;
int main()
{
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	int n, m, u;
	cin >> n >> m;
	for (int i = 1; i <= n; i++)
	{
		scanf("%d", &u);
		a.push_back({ u, i });
	}
	for (int i = 1; i <= m; i++)
	{
		scanf("%d", &u);
		b.push_back({ u, i });
	}
	sort(a.begin(), a.end());
	sort(b.begin(), b.end());
	int j = n - 1;
	ans.set();
	for (int i = m - 1; i >= 0; i--)
	{
		while (j >= 0 && a[j].first >= b[i].first)
			now.set(a[j].second), j--;
		cout << now << endl;
		ans &= now >> b[i].second;
	}
	cout << ans.count() << endl;
	return TIME;
}

