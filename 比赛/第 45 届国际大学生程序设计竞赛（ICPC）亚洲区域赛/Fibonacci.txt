链接：https://ac.nowcoder.com/acm/contest/9925/G
来源：牛客网

In mathematics, the Fibonacci numbers, commonly denoted as f_nf 
n
​	
 , is a sequence such that each number is the sum of the two preceding numbers, starting with {1}1 and {1}1. That is, f_1 = 1, f_2 = 1f 
1
​	
 =1,f 
2
​	
 =1 and f_n = f_{n-2} + f_{n-1}~(n \ge 3)f 
n
​	
 =f 
n−2
​	
 +f 
n−1
​	
  (n≥3).

Thus, the beginning of the sequence is 1, 1, 2, 3, 5, 8, 13, 21,\ldots1,1,2,3,5,8,13,21,… .

Given {n}n, please calculate \sum_{i=1}^{n}{\sum_{j=i+1}^{n}{g(f_i,f_j)}}∑ 
i=1
n
​	
 ∑ 
j=i+1
n
​	
 g(f 
i
​	
 ,f 
j
​	
 ), where {g(x,y) = 1}g(x,y)=1 when x \cdot yx⋅y is even, otherwise {g(x,y) = 0}g(x,y)=0.
输入描述:
The only line contains one integer n~(1\le n\le 10^9)n (1≤n≤10 
9
 ).
输出描述:
Output one number -- \sum_{i=1}^{n}{\sum_{j=i+1}^{n}{g(f_i,f_j)}}∑ 
i=1
n
​	
 ∑ 
j=i+1
n
​	
 g(f 
i
​	
 ,f 
j
​	
 ).
示例1
输入
复制
3
输出
复制
2
示例2
输入
复制
10
输出
复制
24
示例3
输入
复制
100
输出
复制
2739
题意：询问n以内多少对斐波那契数的数值满足乘积是偶数，直接算。
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
const int mod = 1e9 + 7;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf;  int x = false;  char ch = gc;  bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
template<class T> T gcd(T a, T b) { return b == 0 ? a : gcd(b, a % b); };
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
const int N = 1e5 + 10;
int main()
{
#ifdef LOCAL
	freopen("E:/input.ptxt", "r", stdin);
#endif
	ll n;
	cin >> n;
	ll odd = n / 3 * 2 + n % 3, even = n / 3;
	cout << even * odd + even * (even - 1) / 2 << endl;
	return TIME;
}
