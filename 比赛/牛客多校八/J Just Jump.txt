#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define continue(x) { x; continue; }
#define break(x) { x; break; }
const int N = 1e7 + 10;
const int mod = 998244353;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
int fpow(int a, int b) 
{ 
	int res = 1; 
	for (; b > 0; b >>= 1)
	{ 
		if (b & 1) 
			res = 1LL * res * a % mod;
		a = 1LL * a * a % mod; 
	} 
	return res; 
}
int L, d, m;
int fac[N];
int f[N];
int inv[N];
int sum[N];
int u[2][3010];
struct node{
	int t, p;
	bool operator < (const node &oth)const
	{
		return t < oth.t;
	}
}a[3010];
void A()
{
	fac[0] = 1;
	for (int i = 1; i <= N - 10; i++)
	{
		fac[i] = 1LL * fac[i - 1] * i % mod;
	}
	inv[N - 10] = fpow(fac[N - 10], mod - 2);
	for (int i = N - 11; i >= 1; i--)
		inv[i] = 1LL * inv[i + 1] * (i + 1) % mod;
}
int C(ll a, ll b)
{
	if (!b)
		return 1;
	if (b < 0)
		return 0;
	return 1LL * fac[a] * inv[a - b] % mod * inv[b] % mod;
}
ll B(ll x, ll y)
{
	y = y - (ll)d * x;
	if (y < 0)
		return 0;
	if (x == 0)
		return y == 0;
	return C(x + y - 1, x - 1);
}
int main(){
#ifdef LOCAL
	freopen("D:/input.txt", "r", stdin);
#endif
	cin >> L >> d >> m;
	A();
	f[0] = sum[0] = 1;
	for (int i = 1; i <= L; i++)
	{
		if (i < d)
			f[i] = 0;
		else
			f[i] = sum[i - d];
		sum[i] = (sum[i - 1] + f[i]) % mod;
	}
	for (int i = 1; i <= m; i++)
		scanf("%d%d", &a[i].t, &a[i].p);
	sort(a + 1, a + m + 1);
	u[0][0] = 1;
	ll ans = f[L];
	for (int i = 1; i <= m; i++)
	{
		for (int k = 0; k < 2; k++)
		{
			for (int j = 0; j < i; j++)
			{
				u[k][i] = (u[k][i] + 1LL * u[k ^ 1][j] * B(a[i].t - a[j].t, a[i].p - a[j].p)) % mod;
			}
		}
		ans = (ans + 1LL * (u[0][i] - u[1][i] + mod) % mod * f[L - a[i].p] % mod) % mod;
	}
	cout << ans << endl;
	return TIME;
}

