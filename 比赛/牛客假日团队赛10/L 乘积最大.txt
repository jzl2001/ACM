链接：https://ac.nowcoder.com/acm/contest/1072/L
来源：牛客网
题目描述 
今年是国际数学联盟确定的“2000――世界数学年”，又恰逢我国著名数学家华罗庚先生诞辰90周年。在华罗庚先生的家乡江苏金坛，组织了一场别开生面的数学智力竞赛的活动，你的一个好朋友XZ也有幸得以参加。活动中，主持人给所有参加活动的选手出了这样一道题目：
设有一个长度为N的数字串，要求选手使用K个乘号将它分成K+1个部分，找出一种分法，使得这K+1个部分的乘积能够为最大。
同时，为了帮助选手能够正确理解题意，主持人还举了如下的一个例子：
有一个数字串：312， 当N=3，K=1时会有以下两种分法：
1) 3*12=36
2) 31*2=62
这时，符合题目要求的结果是：31*2=62
现在，请你帮助你的好朋友XZ设计一个程序，求得正确的答案。
输入描述:
第一行共有2个自然数N，K（6 ≤ N ≤ 40，1 ≤ K ≤ 6）
第二行是一个长度为N的数字串。
输出描述:
输出所求得的最大乘积（一个自然数）。
示例1 
输入
复制 
4 2
1231
输出
复制 
62
<dp><高精度>
p = [0] * 100
d = [[0 for i in range(55)] for i in range(55)]
n, m = map(int, input().split())
s = input()
s = '0' + s
for i in range(1, n + 1):
    d[i][0] = int(s[1:i + 1])
for i in range(1, n + 1):
    k = (m - (n - i) if (m - (n - i) >= 1) else 1)  
    while k < i and k <= m:
       for j in range(k, i):
           d[i][k] = max(d[i][k], d[j][k - 1] *int(s[j + 1: i + 1]))
       k += 1
print(d[n][m])
