题目描述

现在有一档综艺节目即将在网络上播出，总共会有 n 集，节目会按顺序逐集播出。节目组决定在某些集节目中投放广告。
节目最初播出时，会有 m 名观众观看。若第 i 集投放有广告，记此时还剩有 c 名观众观看，则会产生 c⋅pi 的收益；但播出后则会让观众的人数变为c′=⌊c/di⌋，即第 i+1 集只会剩有 c′ 名观众观看。如果在第 i 集没有投放广告，则不会产生收益，观众人数也不会变化。
请你帮助节目组计算一下各种可能的方案中，最大的收益和。

输入

第一行，两个整数 n 和 m (1≤n,m≤105)，表示节目集数和首播时的观众数量。
第二行，共 n 个整数 pi (1≤pi≤106)，表示第 i 集投放广告时每名观众能带来的收益。
第三行，共 n 个整数 di (1≤di≤m)，表示第 i 集投放广告后，观众数量会变为人数除以 di 并向下取整。

输出

一个整数，表示可能的最大的收益和。

样例输入 Copy

5 20
9 14 10 4 5
2 7 1 8 10
样例输出 Copy

335
提示

样例输入二
6 5
5 31 53 58 74 97 5 5 4 5 5 4
样例输出二
485 第一个样例中，可以考虑在第 1, 2, 3, 5 集投放广告。这样，在第 1 集时有 2 名观众，投放广告获得收益 2；在第 2 集时有⌊20/2⌋=10 名观众，投放广告获得收益 10×14=140；在第 3 集时有 ⌊10/7⌋=1 名观众，投放广告获得收益  1×10=10；在第 4 集时有 ⌊1/1⌋=1 名观众，但因为没有投放广告，所以没有收益；在第 5 集时有 1 名观众，投放广告获得收益 1×5=5。最终，总收益为 1。这是能够取到最大的收益和的一个方案。
第二个样例中，可以考虑只在第 6 集投放广告，能获得的总收益为  5×97=485，这是能够取到最大的收益和的一个方案。 换个方案，如果选择在第 5, 6 集投放广告，能获得的总收益为  5×74+⌊5/5⌋×97=467，并不如只在第 6 集投放广告获得的总收益高。

思路：
因为是整除，所以最多根号个有意义的数值，1e5以内最大的就只有631个。

所以可以先打出来有意义的数值，然后做个类似于背包的dp就可以了。

f[i]表示当前剩余观众为i的最大收益。
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
 
const int mod = 1e9 + 7;
const int INF = 0x3f3f3f3f;
const int N = 1e5 + 10;
 
int p[N], d[N];
ll f[N * 10];
ll g[N * 10];
int vis[N * 10];
int val[N];
int main()
{
#ifdef LOCAL
    freopen("E:/input.txt", "r", stdin);
#endif
    int n, m;
    cin >> n >> m;
    for (int i = 1; i <= n; i++)
        scanf("%d", &p[i]);
    for (int i = 1; i <= n; i++)
        scanf("%d", &d[i]);
    int cnt = 0;
    vis[m] = 1;
    val[++cnt] = m;
    for (int i = m; i >= 1; i--)
    {
        if (vis[i])
        {
            for (int j = 1; j <= i; j++)
                vis[i / j] = 1;
            val[++cnt] = i;
        }
    }
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= cnt; j++)
            f[val[j] / d[i]] = max(f[val[j] / d[i]], g[val[j]] + 1LL * val[j] * p[i]);
        for (int j = 1; j <= cnt; j++)
            g[val[j]] = f[val[j]];
    }
    ll ans = 0;
    for (int i = 0; i <= m; i++)
        ans = max(ans, f[i]);
    cout << ans << endl;
    return 0;
}