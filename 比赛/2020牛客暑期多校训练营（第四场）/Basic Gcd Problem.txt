链接：https://ac.nowcoder.com/acm/contest/7882/B
来源：牛客网

Basic Gcd Problem
时间限制：C/C++ 2秒，其他语言4秒
空间限制：C/C++ 262144K，其他语言524288K
64bit IO Format: %lld
题目描述 
As a great ACMer, ZYB is also good at math and number theory.

ZYB constructs a function f_c(x)f 
c
​	
 (x) such that:
.
Give some positive integer pairs (n_i, c_i)(n 
i
​	
 ,c 
i
​	
 ), ZYB wants to know f_{c_i}(n_i)\mod (10^9+7)f 
c 
i
​	
 
​	
 (n 
i
​	
 )mod(10 
9
 +7).
输入描述:
The input contains multiple test cases. The first line of input contains one integer T (1 \leq T \leq 10^6)T(1≤T≤10 
6
 ).
In the following {T}T lines, each line contains two integers n_i, c_in 
i
​	
 ,c 
i
​	
  (1 \leq n_i, c_i \leq 10^61≤n 
i
​	
 ,c 
i
​	
 ≤10 
6
 ) describing one question.
输出描述:
For each test case, output one integer indicating the answer.
示例1
输入
复制
2
3 3
10 5
输出
复制
3
25
质因数分解，这样次数最多，分解出来的质因数个数即是C的次方数。
快速幂计算即可。
#include <iostream>
#include <set>
//#include <bits/stdc++.h>
//#include <unordered_map>
#include <assert.h>
#include <time.h>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <string>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 1e9 + 7;
const int N = 1e6 + 10;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
int vis[N];
int cnt[N];
void init()
{
	for (int i = 2; i < N; i++)
	{
		if (vis[i])
			continue;
		cnt[i] = 1;
		for (int j = 2 * i; j < N; j += i)
		{
			vis[j] = 1;
			int num = j;
			while (num % i == 0)
				cnt[j]++, num /= i;
		}
	}
}
int main()
{
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	init();
	int t;
	cin >> t;
	while (t--)
	{
		ll n, c;
		scanf("%lld%lld", &n, &c);
		printf("%lld\n", fpow(c, cnt[n], mod));
	}
	return TIME;
}
