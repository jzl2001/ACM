/*
转化完题意就是问是不是对称图形
因为题目输入的点是按顺序的，所以我们直接相邻两个存下差就可以了
*/
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
 
#define gun goto brk;
#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 1e9 + 7;
const int N = 1e6 + 10;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
int n;
struct node
{
	int x, y;
}a[N];
map<pair<int, int>, int>mp;
int main(){
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	int n;
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		cin >> a[i].x >> a[i].y;
	}
	mp[{a[n].x - a[1].x, a[n].y - a[1].y}]++;
	for (int i = 2; i <= n; i++)
	{
		mp[{a[i].x - a[i - 1].x, a[i].y - a[i - 1].y}]++;
	}
	for (auto &i : mp)
	{
		if (i.second != 2 && (i.second + mp[{ -i.first.first, -i.first.second }] != 2))
		{
			cout << "NO" << endl;
			gun
		}
	}
	cout << "YES" << endl;
brk:;
	return TIME;
}