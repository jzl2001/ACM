#include <iostream>
#include <algorithm>
#include <ctime>
#include <cstdio>
#include <bits/stdc++.h>
#include <unordered_map>
#include <unordered_set>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
 
#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 1000000009
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res % mod; }
const int mod = 1e9 + 7;
const int N = 2e5 + 10;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
int a[N];
int pos[N];
int main()
{
#ifdef LOCAL
	freopen("D:/input.txt", "r", stdin);
#endif
	int n, m;
	cin >> n >> m;
	for (int i = 1; i <= n; i++)
		scanf("%d", &a[i]), pos[i] = i;
//	sort(pos + 1, pos + n + 1, [&](int x, int y) { return a[x] < a[y]; });
	for (int i = 1; i <= m; i++)
	{
		int L, R, X;
		scanf("%d%d%d", &L, &R, &X);
		int cnt1 = 0, cnt2 = 0;
		if (pos[X] < L || pos[X] > R)
			Continue(puts("Yes"))
		for (int j = L; j <= pos[X]; j++)
			if (a[j] > a[X])
				cnt1++;
		for (int j = pos[X]; j <= R; j++)
			if (a[j] < a[X])
				cnt2++;
		if (cnt1 == cnt2)
			puts("Yes");
		else
			puts("No");
	}
	return TIME;
}