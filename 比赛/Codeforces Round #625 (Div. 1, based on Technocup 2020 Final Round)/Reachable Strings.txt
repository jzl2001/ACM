#include <bits/stdc++.h>
//#include <unordered_map>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

#ifdef LOCAL
#define debug(x) cout << "[" __FUNCTION__ ": " #x " = " << (x) << "]\n"
#define TIME cout << "RuningTime: " << clock() << "ms\n", 0
#else
#define TIME 0
#endif
#define hash_ 998244353
#define Continue(x) { x; continue; }
#define Break(x) { x; break; }
const int mod = 1e9 + 7;
const int N = 2e5 + 10;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
#define gc p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;
inline int read(){ static char buf[1000000], *p1 = buf, *p2 = buf; register int x = false; register char ch = gc; register bool sgn = false; while (ch != '-' && (ch < '0' || ch > '9')) ch = gc; if (ch == '-') sgn = true, ch = gc; while (ch >= '0'&& ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc; return sgn ? -x : x; }
ll fpow(ll a, int b, int mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
ll h[N][2];
char s[N];
ll base[N];
int cnt[N];
ull calc(int L, int R)
{
	return (h[R][L & 1] - h[L - 1][L & 1] * base[cnt[R] - cnt[L - 1]] % mod + mod) % mod;
}
int main()
{
#ifdef LOCAL
	freopen("E:/input.txt", "r", stdin);
#endif
	int n, m;
	cin >> n;
	scanf("%s", s + 1);
	cin >> m;
	base[0] = 1;
	for (int i = 1; i <= n; i++)
	{
		base[i] = base[i - 1] * hash_ % mod;
		cnt[i] = cnt[i - 1];
		h[i][0] = h[i - 1][0];
		h[i][1] = h[i - 1][1];
		if (s[i] == '0')
		{
			cnt[i] = cnt[i - 1] + 1;
			h[i][0] = (h[i - 1][0] * hash_  % mod + (i & 1) + 1) % mod; //当前位置奇偶结尾，偶数多加个1，最后查询的时候差值就是base[cnt差]
			h[i][1] = (h[i - 1][1] * hash_  % mod + (i & 1 ^ 1) + 1) % mod;
		}
	}
	while (m--)
	{
		int x, y, z;
		cin >> x >> y >> z;
		if (calc(x, x + z - 1) == calc(y, y + z - 1))
			puts("YES");
		else
			puts("NO");
	}
	return TIME;
}
/*
011可以变成110，询问能能否变成
*/