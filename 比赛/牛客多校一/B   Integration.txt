#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
#define sz(a) ((int)(a).size())
typedef long long ll;
bool cmp(int a, int b) { return a > b; }
#define me(a, b) (memset(a, b, sizeof a))
const int INF = 0x3f3f3f3f;
const int mod = 1e9 + 7;
const double PI = acos(-1);
const int N = 2e4 + 10;
template<typename S, typename T> inline bool Min(S &a, const T &b){ return a > b ? a = b, true : false; }
template<typename S, typename T> inline bool Max(S &a, const T &b){ return a < b ? a = b, true : false; }
template<typename S, typename T> inline void Adm(S &a, const T &b){ a = (a + b) % mod; if (a < 0) a += mod; }
template<typename S, typename T> inline void Mum(S &a, const T &b){ a = 1LL * a * b % mod; }
template<typename T> inline T gcd(T a, T b){ while (b){ T t = b; b = a % b; a = t; }return a; }
template<typename T> inline int bcnt(T x){ int cnt = 0; while (x)++cnt, x &= x - 1; return cnt; }
inline ll fpow(ll a, ll b) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
#define bo bool operator < (const node &oth)const
#define AC return 0;
 
ll n;
ll a[N];
ll c[N];
ll get_num(ll x)
{
    ll ans = 1;
    for (int i = 1; i <= n; i++)
    {
        if (i == x)
            continue;
        ans = ans * (a[i] * a[i] % mod - a[x] * a[x] % mod + mod) % mod; // ¼õÊ±ºò+mod
    }
    return fpow(ans, mod - 2);
}
int main(){
    while (cin >> n)
    {
        ll ans = 0;
        for (int i = 1; i <= n; i++)
            cin >> a[i];
        for (ll i = 1; i <= n; i++)
        {
            ans = (ans + get_num(i) % mod * fpow(2 * a[i], mod - 2) % mod) % mod;
        }
        cout << ans << endl;
    }
    AC
}