Bobo has a triangle ABC with A(x_1, y_1), B(x_2, y_2) and C(x_3, y_3). Picking a point P uniformly in triangle ABC, he wants to know the expectation value  where  denotes the area of triangle XYZ.

Print the value of36 * E . It can be proved that it is always an integer.
取重心， 重心以上再取重心求出平均高度
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
#define sz(a) ((int)(a).size())
typedef long long ll;
bool cmp(int a, int b) { return a > b; }
#define me(a, b) (memset(a, b, sizeof a))
const int INF = 0x3f3f3f3f;
const int mod = 998244353;
const double PI = acos(-1);
const int N = 1e6 + 10;
template<typename S, typename T> inline bool Min(S &a, const T &b){ return a > b ? a = b, true : false; }
template<typename S, typename T> inline bool Max(S &a, const T &b){ return a < b ? a = b, true : false; }
template<typename S, typename T> inline void Adm(S &a, const T &b){ a = a + b;  }
template<typename S, typename T> inline void Mum(S &a, const T &b){ a = 1LL * a * b % mod; }
template<typename T> inline T gcd(T a, T b){ while (b){ T t = b; b = a % b; a = t; }return a; }
template<typename T> inline int bcnt(T x){ int cnt = 0; while (x)++cnt, x &= x - 1; return cnt; }
inline ll fpow(ll a, ll b, ll mod) { ll res = 1; for (; b > 0; b >>= 1) { if (b & 1) res = res * a % mod; a = a * a % mod; } return res; }
#define bo bool operator < (const node &oth)const
#define AC return 0;
 
int main(){
    ll x1, y1, x2, y2, x3, y3;
    while (cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3)
    {
        cout << 11 * abs((x2 - x1) * (y3 - y1) - (x3 - x1) *(y2 - y1)) << endl;
    }
    AC
}